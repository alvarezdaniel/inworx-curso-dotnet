//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.2914.16
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Woodgrove {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public class TransactionDataSet : System.Data.DataSet {
        
        private _GetTransactionLogDataTable table_GetTransactionLog;
        
        public TransactionDataSet() {
            this.InitClass();
        }
        
        private TransactionDataSet(SerializationInfo info, StreamingContext context) {
            this.InitClass();
            this.GetSerializationData(info, context);
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _GetTransactionLogDataTable _GetTransactionLog {
            get {
                return this.table_GetTransactionLog;
            }
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.ReadXml(reader, XmlReadMode.IgnoreSchema);
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        private void InitClass() {
            this.DataSetName = "TransactionDataSet";
            this.Namespace = "http://www.tempuri.org/TransactionDataSet.xsd";
            this.table_GetTransactionLog = new _GetTransactionLogDataTable();
            this.Tables.Add(this.table_GetTransactionLog);
        }
        
        private bool ShouldSerialize_GetTransactionLog() {
            return false;
        }
        
        public delegate void _GetTransactionLogRowChangeEventHandler(object sender, _GetTransactionLogRowChangeEvent e);
        
        public class _GetTransactionLogDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnTransactionID;
            
            private DataColumn columnTransactionDate;
            
            private DataColumn columnAccountID;
            
            private DataColumn columnAmount;
            
            private DataColumn columnDescription;
            
            private DataColumn columnType;
            
            internal _GetTransactionLogDataTable() : 
                    base("_GetTransactionLog") {
                this.InitClass();
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn TransactionIDColumn {
                get {
                    return this.columnTransactionID;
                }
            }
            
            internal DataColumn TransactionDateColumn {
                get {
                    return this.columnTransactionDate;
                }
            }
            
            internal DataColumn AccountIDColumn {
                get {
                    return this.columnAccountID;
                }
            }
            
            internal DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            internal DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            internal DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            public _GetTransactionLogRow this[int index] {
                get {
                    return ((_GetTransactionLogRow)(this.Rows[index]));
                }
            }
            
            public event _GetTransactionLogRowChangeEventHandler _GetTransactionLogRowChanged;
            
            public event _GetTransactionLogRowChangeEventHandler _GetTransactionLogRowChanging;
            
            public event _GetTransactionLogRowChangeEventHandler _GetTransactionLogRowDeleted;
            
            public event _GetTransactionLogRowChangeEventHandler _GetTransactionLogRowDeleting;
            
            public void Add_GetTransactionLogRow(_GetTransactionLogRow row) {
                this.Rows.Add(row);
            }
            
            public _GetTransactionLogRow Add_GetTransactionLogRow(System.DateTime TransactionDate, int AccountID, System.Decimal Amount, string Description, string Type) {
                _GetTransactionLogRow row_GetTransactionLogRow = ((_GetTransactionLogRow)(this.NewRow()));
                row_GetTransactionLogRow.ItemArray = new object[] {
                        null,
                        TransactionDate,
                        AccountID,
                        Amount,
                        Description,
                        Type};
                this.Rows.Add(row_GetTransactionLogRow);
                return row_GetTransactionLogRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            private void InitClass() {
                this.columnTransactionID = new DataColumn("TransactionID", typeof(int), "", System.Data.MappingType.Element);
                this.columnTransactionID.AutoIncrement = true;
                this.columnTransactionID.AllowDBNull = false;
                this.columnTransactionID.ReadOnly = true;
                this.Columns.Add(this.columnTransactionID);
                this.columnTransactionDate = new DataColumn("TransactionDate", typeof(System.DateTime), "", System.Data.MappingType.Element);
                this.columnTransactionDate.AllowDBNull = false;
                this.Columns.Add(this.columnTransactionDate);
                this.columnAccountID = new DataColumn("AccountID", typeof(int), "", System.Data.MappingType.Element);
                this.columnAccountID.AllowDBNull = false;
                this.Columns.Add(this.columnAccountID);
                this.columnAmount = new DataColumn("Amount", typeof(System.Decimal), "", System.Data.MappingType.Element);
                this.columnAmount.AllowDBNull = false;
                this.Columns.Add(this.columnAmount);
                this.columnDescription = new DataColumn("Description", typeof(string), "", System.Data.MappingType.Element);
                this.columnDescription.AllowDBNull = false;
                this.Columns.Add(this.columnDescription);
                this.columnType = new DataColumn("Type", typeof(string), "", System.Data.MappingType.Element);
                this.columnType.AllowDBNull = false;
                this.Columns.Add(this.columnType);
            }
            
            public _GetTransactionLogRow New_GetTransactionLogRow() {
                return ((_GetTransactionLogRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                // We need to ensure that all Rows in the tabled are typed rows.
                // Table calls newRow whenever it needs to create a row.
                // So the following conditions are covered by Row newRow(Record record)
                // * Cursor calls table.addRecord(record) 
                // * table.addRow(object[] values) calls newRow(record)    
                return new _GetTransactionLogRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(_GetTransactionLogRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._GetTransactionLogRowChanged != null)) {
                    this._GetTransactionLogRowChanged(this, new _GetTransactionLogRowChangeEvent(((_GetTransactionLogRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._GetTransactionLogRowChanging != null)) {
                    this._GetTransactionLogRowChanging(this, new _GetTransactionLogRowChangeEvent(((_GetTransactionLogRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._GetTransactionLogRowDeleted != null)) {
                    this._GetTransactionLogRowDeleted(this, new _GetTransactionLogRowChangeEvent(((_GetTransactionLogRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._GetTransactionLogRowDeleting != null)) {
                    this._GetTransactionLogRowDeleting(this, new _GetTransactionLogRowChangeEvent(((_GetTransactionLogRow)(e.Row)), e.Action));
                }
            }
            
            public void Remove_GetTransactionLogRow(_GetTransactionLogRow row) {
                this.Rows.Remove(row);
            }
        }
        
        public class _GetTransactionLogRow : DataRow {
            
            private _GetTransactionLogDataTable table_GetTransactionLog;
            
            internal _GetTransactionLogRow(DataRowBuilder rb) : 
                    base(rb) {
                this.table_GetTransactionLog = ((_GetTransactionLogDataTable)(this.Table));
            }
            
            public int TransactionID {
                get {
                    return ((int)(this[this.table_GetTransactionLog.TransactionIDColumn]));
                }
                set {
                    this[this.table_GetTransactionLog.TransactionIDColumn] = value;
                }
            }
            
            public System.DateTime TransactionDate {
                get {
                    return ((System.DateTime)(this[this.table_GetTransactionLog.TransactionDateColumn]));
                }
                set {
                    this[this.table_GetTransactionLog.TransactionDateColumn] = value;
                }
            }
            
            public int AccountID {
                get {
                    return ((int)(this[this.table_GetTransactionLog.AccountIDColumn]));
                }
                set {
                    this[this.table_GetTransactionLog.AccountIDColumn] = value;
                }
            }
            
            public System.Decimal Amount {
                get {
                    return ((System.Decimal)(this[this.table_GetTransactionLog.AmountColumn]));
                }
                set {
                    this[this.table_GetTransactionLog.AmountColumn] = value;
                }
            }
            
            public string Description {
                get {
                    return ((string)(this[this.table_GetTransactionLog.DescriptionColumn]));
                }
                set {
                    this[this.table_GetTransactionLog.DescriptionColumn] = value;
                }
            }
            
            public string Type {
                get {
                    return ((string)(this[this.table_GetTransactionLog.TypeColumn]));
                }
                set {
                    this[this.table_GetTransactionLog.TypeColumn] = value;
                }
            }
        }
        
        public class _GetTransactionLogRowChangeEvent : EventArgs {
            
            private _GetTransactionLogRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            public _GetTransactionLogRowChangeEvent(_GetTransactionLogRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public _GetTransactionLogRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
